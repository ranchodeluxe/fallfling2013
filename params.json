{"name":"A HowTo About A HowTo: The Python GDAL/OGR Cookbook","tagline":"CUGOS 2013 Fall Fling Smackdown","body":"# Welcome to the Smackdown!\r\nLet's learn how we can use \r\n[Pierce County's awesome Python GDAL/OGR Cookbook](http://pcjericks.github.io/py-gdalogr-cookbook/). \r\nBut first, let's install a bunch of junk on your computer if it's not already there.\r\n\r\n## Tooling, Installs, Data\r\nSome tools we'll use today to explore the cookbook include:\r\n\r\n0. **Shell**  # Windows people can use CMD, PowerShell or GitBash ( see below ). Mac users have Terminal\r\n1. **Python**\r\n2. **GDAL/OGR Library and Python Bindings**\r\n3. [Mapfart.com](http://mapfart.com) or **QGIS**  # to visualize the input/outputs\r\n4. **Shapefiles**  # i got mine from [King County GIS Portal](http://www5.kingcounty.gov/gisdataportal/Default.aspx)\r\n5. **PostGIS**  # if you care about database support\r\n\r\nWe will **not** be walking people through installs. Installs depend on the \r\noperating system you are running among other factors. So here's a list of places \r\nto get started depending on your operating system:\r\n\r\n#### Windows\r\nThere's no particular reason to use \r\n[GitBash](http://code.google.com/p/msysgit/downloads/list?q=label:Featured) \r\nfor these examples. Using CMD or PowerShell in Windows is fine. \r\nMost of the time we will just be running `python <script_name>` commands. \r\nBut sometimes we might be running shell commands that look unfamiliar. \r\nIf you want to explore a Linux-type shell environment \r\nthen [GitBash](http://code.google.com/p/msysgit/downloads/list?q=label:Featured) \r\nis a good place to start.\r\n\r\nLuckily Python, GDAL/OGR ( w/ Python bindings ) and QGIS can all be installed \r\nin one shot with (OSGeo4W)[http://trac.osgeo.org/osgeo4w/wiki]. \r\n\r\nPostGIS can be installed as a plugin after you install the [Postgresql database\r\nwith this sweet GUI installer](http://www.postgresql.org/download/windows/).\r\n\r\n#### Mac\r\nSpecific GDAL install instructions can be found \r\n[here](http://www.kyngchaos.com/software:frameworks). \r\nThat tutorial references \r\n[this repository](http://www.kyngchaos.com/software:frameworks) \r\nwhere you can find QGIS and PostGIS among a number of other GIS installs for Mac.\r\n\r\n#### Linux ( Debian and Ubuntu )\r\nIf you are into using packages then you probably want to use \r\nthe [UbuntuGIS PPA](https://wiki.ubuntu.com/UbuntuGIS).\r\n\r\nIf you like to run `config, make, make install` stuff then:\r\n\r\n```bash\r\n#\r\n# get subversion, git\r\n#\r\n$ sudo apt-get install subversion git\r\n\r\n#\r\n# get gcc components and build tools\r\n#\r\n$ sudo apt-get install build-essential libtool automake binutils\r\n\r\n#\r\n# python tools\r\n#\r\n$ sudo apt-get install python-setuptools python-dev python-psycopg2 python-virtualenv\r\n\r\n\r\n#\r\n#  PROJ4\r\n#\r\nmkdir -p /usr/local/src/proj\r\ncd /usr/local/src/proj\r\nwget http://download.osgeo.org/proj/proj-4.7.0.tar.gz # or the one you want\r\ntar -xzvf proj-4.7.0.tar.gz\r\ncd proj-4.7.0/nad\r\nwget http://download.osgeo.org/proj/proj-datumgrid-1.5.zip\r\nsudo apt-get install zip\r\nunzip proj-datumgrid-1.5.zip\r\nrm proj-datumgrid-1.5.zip\r\ncd ..\r\n./configure\r\nmake\r\nsudo make install\r\nsudo ldconfig\r\n\r\n# you'll probably need to define some more projections\r\nvim /usr/local/share/proj/epsg\r\n# add the following projections to the end of the file\r\n# google spherical mercator\r\n<900913> +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs  <>\r\n# custom esri projection from http://spatialreference.org/ref/esri/102761/\r\n<9102761> +proj=lcc +lat_1=18.03333333333334 +lat_2=18.43333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=200000 +y_0=200000 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs  <>\r\n\r\n#\r\n#  GEOS\r\n#\r\nmkdir -p /usr/local/src/geos\r\ncd /usr/local/src/geos\r\nwget http://download.osgeo.org/geos/geos-3.3.1.tar.bz2 # or the one you want\r\ntar -xjvf geos-3.3.1.tar.bz2\r\ncd geos-3.3.1\r\n./configure\r\nmake\r\nsudo make install\r\nsudo ldconfig\r\n\r\n\r\n#\r\n#  GDAL/OGR\r\n#\r\nmkdir -p /usr/local/src/gdal\r\ncd /usr/local/src/gdal\r\n# Release\r\nwget http://download.osgeo.org/gdal/gdal-1.8.1.tar.gz # or the one you want\r\ntar -xzvf gdal-*.tar.gz\r\nrm gdal-*.tar.gz\r\ncd gdal-*\r\n./configure --with-python --with-threads --with-pg --with-geos=yes\r\nmake\r\nsudo make install\r\nsudo ldconfig\r\n```\r\n\r\n-----\r\n-----\r\n\r\n## Cookbook Handling Techniques\r\nNow that everything is installed, let's see how easy it is to use the cookbook examples:\r\n\r\n### Python Shell ( Exploratory Hack )\r\n\r\n### Python Scripts ( One Offs )\r\n\r\n### Python Scripts ( Add Args )\r\n\r\n## OGR, DataSources, Layers -- Oh My! \r\nhttp://gdal.org/python/\r\n\r\n### OGR Namespaced Functions\r\n\r\n### DataSources\r\n\r\n### Layers \r\n\r\n### Projections\r\n\r\n### Tricks, Trapdoors, Gotchas\r\nhttp://trac.osgeo.org/gdal/wiki/PythonGotchas\r\n\r\n## Giving Back: Contributing to the Cookbook\r\n\r\n### Clone\r\n\r\n### Revise\r\n\r\n### Send Pull Request\r\n\r\n### Authors and Contributors\r\nThanks to the developers at Pierce County GIS @jericks, Cort Daniels, Michael Payne. Thanks to Greg Corradini for putting this together last minute like.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}